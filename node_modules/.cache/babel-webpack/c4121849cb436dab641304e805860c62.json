{"ast":null,"code":"import _asyncToGenerator from \"/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { formatDate } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserDTO } from 'src/app/Models/user.dto';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, userService, sharedService, headerMenusService, router) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.sharedService = sharedService;\n    this.headerMenusService = headerMenusService;\n    this.router = router;\n    this.registerUser = new UserDTO('', '', '', '', new Date(), '', '');\n    this.isValidForm = null;\n    this.name = new FormControl(this.registerUser.name, [Validators.required, Validators.minLength(5), Validators.maxLength(25)]);\n    this.surname_1 = new FormControl(this.registerUser.surname_1, [Validators.required, Validators.minLength(5), Validators.maxLength(25)]);\n    this.surname_2 = new FormControl(this.registerUser.surname_2, [Validators.minLength(5), Validators.maxLength(25)]);\n    this.alias = new FormControl(this.registerUser.alias, [Validators.required, Validators.minLength(5), Validators.maxLength(25)]);\n    this.birth_date = new FormControl(formatDate(this.registerUser.birth_date, 'yyyy-MM-dd', 'en'), [Validators.required]);\n    this.email = new FormControl(this.registerUser.email, [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$')]);\n    this.password = new FormControl(this.registerUser.password, [Validators.required, Validators.minLength(8)]);\n    this.registerForm = this.formBuilder.group({\n      name: this.name,\n      surname_1: this.surname_1,\n      surname_2: this.surname_2,\n      alias: this.alias,\n      birth_date: this.birth_date,\n      email: this.email,\n      password: this.password\n    });\n  }\n\n  ngOnInit() {}\n\n  register() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let responseOK = false;\n      _this.isValidForm = false;\n      let errorResponse;\n\n      if (_this.registerForm.invalid) {\n        return;\n      }\n\n      _this.isValidForm = true;\n      _this.registerUser = _this.registerForm.value;\n      /* try {\n        await this.userService.register(this.registerUser);\n        responseOK = true;\n      } catch (error: any) {\n        responseOK = false;\n        errorResponse = error.error;\n             const headerInfo: HeaderMenus = {\n          showAuthSection: false,\n          showNoAuthSection: true,\n        };\n        this.headerMenusService.headerManagement.next(headerInfo);\n             this.sharedService.errorLog(errorResponse);\n      }\n           await this.sharedService.managementToast(\n        'registerFeedback',\n        responseOK,\n        errorResponse\n      );\n           if (responseOK) {\n        // Reset the form\n        this.registerForm.reset();\n        // After reset form we set birthDate to today again (is an example)\n        this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n        this.router.navigateByUrl('home');\n      } */\n\n      _this.userService.register(_this.registerUser).subscribe(userResult => {\n        responseOK = true;\n      }, error => {\n        responseOK = false;\n        errorResponse = error.error;\n        const headerInfo = {\n          showAuthSection: false,\n          showNoAuthSection: true\n        };\n\n        _this.headerMenusService.headerManagement.next(headerInfo);\n\n        _this.sharedService.errorLog(errorResponse);\n      }, () => {\n        _this.sharedService.managementToast('registerFeedback', responseOK, errorResponse);\n\n        if (responseOK) {\n          // Reset the form\n          _this.registerForm.reset(); // After reset form we set birthDate to today again (is an example)\n\n\n          _this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n\n          _this.router.navigateByUrl('home');\n        }\n      });\n    })();\n  }\n\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"sources":["/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/src/app/Components/auth/register/register.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { formatDate } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HeaderMenus } from 'src/app/Models/header-menus.dto';\nimport { UserDTO } from 'src/app/Models/user.dto';\nimport { HeaderMenusService } from 'src/app/Services/header-menus.service';\nimport { SharedService } from 'src/app/Services/shared.service';\nimport { UserService } from 'src/app/Services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  registerUser: UserDTO;\n\n  name: FormControl;\n  surname_1: FormControl;\n  surname_2: FormControl;\n  alias: FormControl;\n  birth_date: FormControl;\n  email: FormControl;\n  password: FormControl;\n\n  registerForm: FormGroup;\n  isValidForm: boolean | null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private sharedService: SharedService,\n    private headerMenusService: HeaderMenusService,\n    private router: Router\n  ) {\n    this.registerUser = new UserDTO('', '', '', '', new Date(), '', '');\n\n    this.isValidForm = null;\n\n    this.name = new FormControl(this.registerUser.name, [\n      Validators.required,\n      Validators.minLength(5),\n      Validators.maxLength(25),\n    ]);\n\n    this.surname_1 = new FormControl(this.registerUser.surname_1, [\n      Validators.required,\n      Validators.minLength(5),\n      Validators.maxLength(25),\n    ]);\n\n    this.surname_2 = new FormControl(this.registerUser.surname_2, [\n      Validators.minLength(5),\n      Validators.maxLength(25),\n    ]);\n\n    this.alias = new FormControl(this.registerUser.alias, [\n      Validators.required,\n      Validators.minLength(5),\n      Validators.maxLength(25),\n    ]);\n\n    this.birth_date = new FormControl(\n      formatDate(this.registerUser.birth_date, 'yyyy-MM-dd', 'en'),\n      [Validators.required]\n    );\n\n    this.email = new FormControl(this.registerUser.email, [\n      Validators.required,\n      Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$'),\n    ]);\n\n    this.password = new FormControl(this.registerUser.password, [\n      Validators.required,\n      Validators.minLength(8),\n    ]);\n\n    this.registerForm = this.formBuilder.group({\n      name: this.name,\n      surname_1: this.surname_1,\n      surname_2: this.surname_2,\n      alias: this.alias,\n      birth_date: this.birth_date,\n      email: this.email,\n      password: this.password,\n    });\n  }\n\n  ngOnInit(): void {}\n\n  async register(): Promise<void> {\n    let responseOK: boolean = false;\n    this.isValidForm = false;\n    let errorResponse: any;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.isValidForm = true;\n    this.registerUser = this.registerForm.value;\n\n    /* try {\n      await this.userService.register(this.registerUser);\n      responseOK = true;\n    } catch (error: any) {\n      responseOK = false;\n      errorResponse = error.error;\n\n      const headerInfo: HeaderMenus = {\n        showAuthSection: false,\n        showNoAuthSection: true,\n      };\n      this.headerMenusService.headerManagement.next(headerInfo);\n\n      this.sharedService.errorLog(errorResponse);\n    }\n\n    await this.sharedService.managementToast(\n      'registerFeedback',\n      responseOK,\n      errorResponse\n    );\n\n    if (responseOK) {\n      // Reset the form\n      this.registerForm.reset();\n      // After reset form we set birthDate to today again (is an example)\n      this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n      this.router.navigateByUrl('home');\n    } */\n    this.userService.register(this.registerUser).subscribe(\n      (userResult) => {\n        responseOK = true;\n      },\n      (error: any) => {\n        responseOK = false;\n        errorResponse = error.error;\n\n        const headerInfo: HeaderMenus = {\n          showAuthSection: false,\n          showNoAuthSection: true,\n        };\n        this.headerMenusService.headerManagement.next(headerInfo);\n\n        this.sharedService.errorLog(errorResponse);\n      },\n      () => {\n        this.sharedService.managementToast(\n          'registerFeedback',\n          responseOK,\n          errorResponse\n        );\n\n        if (responseOK) {\n          // Reset the form\n          this.registerForm.reset();\n          // After reset form we set birthDate to today again (is an example)\n          this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n          this.router.navigateByUrl('home');\n        }\n      }\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}