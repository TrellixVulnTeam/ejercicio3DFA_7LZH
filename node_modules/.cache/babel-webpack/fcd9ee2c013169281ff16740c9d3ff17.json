{"ast":null,"code":"import _asyncToGenerator from \"/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthDTO } from 'src/app/Models/auth.dto';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuilder, authService, sharedService, headerMenusService, localStorageService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.sharedService = sharedService;\n    this.headerMenusService = headerMenusService;\n    this.localStorageService = localStorageService;\n    this.router = router;\n    this.loginUser = new AuthDTO('', '', '', '');\n    this.email = new FormControl('', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$')]);\n    this.password = new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(16)]);\n    this.loginForm = this.formBuilder.group({\n      email: this.email,\n      password: this.password\n    });\n  }\n\n  ngOnInit() {}\n\n  login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let responseOK = false;\n      let errorResponse;\n      _this.loginUser.email = _this.email.value;\n      _this.loginUser.password = _this.password.value;\n\n      _this.authService.login(_this.loginUser).subscribe(authResult => {\n        responseOK = true;\n        _this.loginUser.user_id = authResult.user_id;\n        _this.loginUser.access_token = authResult.access_token; // save token to localstorage for next requests\n\n        _this.localStorageService.set('user_id', _this.loginUser.user_id);\n\n        _this.localStorageService.set('access_token', _this.loginUser.access_token);\n      }, error => {\n        responseOK = false;\n        errorResponse = error.error;\n        const headerInfo = {\n          showAuthSection: false,\n          showNoAuthSection: true\n        };\n\n        _this.headerMenusService.headerManagement.next(headerInfo);\n\n        _this.sharedService.errorLog(error.error);\n      }, () => {\n        _this.sharedService.managementToast('loginFeedback', responseOK, errorResponse);\n\n        if (responseOK) {\n          const headerInfo = {\n            showAuthSection: true,\n            showNoAuthSection: false\n          }; // update options menu\n\n          _this.headerMenusService.headerManagement.next(headerInfo);\n\n          _this.router.navigateByUrl('home');\n        }\n      });\n    })();\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/src/app/Components/auth/login/login.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthDTO } from 'src/app/Models/auth.dto';\nimport { HeaderMenus } from 'src/app/Models/header-menus.dto';\nimport { AuthService } from 'src/app/Services/auth.service';\nimport { HeaderMenusService } from 'src/app/Services/header-menus.service';\nimport { LocalStorageService } from 'src/app/Services/local-storage.service';\nimport { SharedService } from 'src/app/Services/shared.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginUser: AuthDTO;\n  email: FormControl;\n  password: FormControl;\n  loginForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private sharedService: SharedService,\n    private headerMenusService: HeaderMenusService,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {\n    this.loginUser = new AuthDTO('', '', '', '');\n\n    this.email = new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$'),\n    ]);\n\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n      Validators.maxLength(16),\n    ]);\n\n    this.loginForm = this.formBuilder.group({\n      email: this.email,\n      password: this.password,\n    });\n  }\n\n  ngOnInit(): void {}\n\n  async login(): Promise<void> {\n    let responseOK: boolean = false;\n    let errorResponse: any;\n\n    this.loginUser.email = this.email.value;\n    this.loginUser.password = this.password.value;\n\n    this.authService.login(this.loginUser).subscribe(\n      (authResult) => {\n        responseOK = true;\n        this.loginUser.user_id = authResult.user_id;\n        this.loginUser.access_token = authResult.access_token;\n        // save token to localstorage for next requests\n        this.localStorageService.set('user_id', this.loginUser.user_id);\n        this.localStorageService.set(\n          'access_token',\n          this.loginUser.access_token\n        );\n      },\n      (error: any) => {\n        responseOK = false;\n        errorResponse = error.error;\n        const headerInfo: HeaderMenus = {\n          showAuthSection: false,\n          showNoAuthSection: true,\n        };\n        this.headerMenusService.headerManagement.next(headerInfo);\n        this.sharedService.errorLog(error.error);\n      },\n      () => {\n        this.sharedService.managementToast(\n          'loginFeedback',\n          responseOK,\n          errorResponse\n        );\n\n        if (responseOK) {\n          const headerInfo: HeaderMenus = {\n            showAuthSection: true,\n            showNoAuthSection: false,\n          };\n          // update options menu\n          this.headerMenusService.headerManagement.next(headerInfo);\n          this.router.navigateByUrl('home');\n        }\n      }\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}