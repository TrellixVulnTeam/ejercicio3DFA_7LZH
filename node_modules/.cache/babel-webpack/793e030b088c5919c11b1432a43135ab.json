{"ast":null,"code":"import _asyncToGenerator from \"/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { formatDate } from '@angular/common';\nimport { FormControl, Validators } from '@angular/forms';\nimport { PostDTO } from 'src/app/Models/post.dto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/post.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/Services/shared.service\";\nimport * as i5 from \"src/app/Services/local-storage.service\";\nimport * as i6 from \"src/app/Services/category.service\";\n\nfunction PostFormComponent_form_5_div_5_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_5_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Title can be max 55 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_5_div_1_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtemplate(2, PostFormComponent_form_5_div_5_div_1_div_2_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.title.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.title.errors.maxlength);\n  }\n}\n\nfunction PostFormComponent_form_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_5_div_1_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.title.errors && ctx_r1.isValidForm != null && !ctx_r1.isValidForm);\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Description can be max 255 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_10_div_1_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtemplate(2, PostFormComponent_form_5_div_10_div_1_div_2_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.description.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.description.errors.maxlength);\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_10_div_1_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.description.errors && ctx_r2.isValidForm != null && !ctx_r2.isValidForm);\n  }\n}\n\nfunction PostFormComponent_form_5_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Publication date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_15_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.publication_date.errors.required);\n  }\n}\n\nfunction PostFormComponent_form_5_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", category_r12.categoryId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r12.title, \" \");\n  }\n}\n\nfunction PostFormComponent_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function PostFormComponent_form_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.savePost();\n    });\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Title:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵtemplate(5, PostFormComponent_form_5_div_5_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵelementStart(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 5);\n    i0.ɵɵtemplate(10, PostFormComponent_form_5_div_10_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵelementStart(12, \"label\", 8);\n    i0.ɵɵtext(13, \"Publication date: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 9);\n    i0.ɵɵtemplate(15, PostFormComponent_form_5_div_15_Template, 2, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\");\n    i0.ɵɵelementStart(17, \"label\", 11);\n    i0.ɵɵtext(18, \"Choose categories:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"select\", 12);\n    i0.ɵɵtemplate(20, PostFormComponent_form_5_option_20_Template, 2, 2, \"option\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 14);\n    i0.ɵɵtext(22, \"SAVE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.postForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.title.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.description.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.publication_date);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.publication_date.errors && ctx_r0.isValidForm != null && !ctx_r0.isValidForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.categories);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.categoriesList);\n  }\n}\n\nexport class PostFormComponent {\n  constructor(activatedRoute, postService, formBuilder, router, sharedService, localStorageService, categoryService) {\n    this.activatedRoute = activatedRoute;\n    this.postService = postService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.sharedService = sharedService;\n    this.localStorageService = localStorageService;\n    this.categoryService = categoryService;\n    this.isValidForm = null;\n    this.postId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.post = new PostDTO('', '', 0, 0, new Date());\n    this.isUpdateMode = false;\n    this.validRequest = false;\n    this.title = new FormControl(this.post.title, [Validators.required, Validators.maxLength(55)]);\n    this.description = new FormControl(this.post.description, [Validators.required, Validators.maxLength(255)]);\n    this.publication_date = new FormControl(formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en'), [Validators.required]);\n    this.categories = new FormControl([]); // get categories by user and load multi select\n\n    this.loadCategories();\n    this.postForm = this.formBuilder.group({\n      title: this.title,\n      description: this.description,\n      publication_date: this.publication_date,\n      categories: this.categories\n    });\n  }\n\n  loadCategories() {\n    let errorResponse;\n    const userId = this.localStorageService.get('user_id');\n\n    if (userId) {\n      try {\n        /* this.categoriesList = await this.categoryService.getCategoriesByUserId(\n          userId\n        ); */\n        this.categoryService.getCategoriesByUserId(userId).subscribe(categoriesResult => {\n          this.categoriesList = categoriesResult;\n        });\n      } catch (error) {\n        errorResponse = error.error;\n        this.sharedService.errorLog(errorResponse);\n      }\n    }\n  }\n\n  ngOnInit() {\n    let errorResponse; // update\n\n    if (this.postId) {\n      this.isUpdateMode = true;\n      /* try {\n        this.post = await this.postService.getPostById(this.postId);\n               this.title.setValue(this.post.title);\n               this.description.setValue(this.post.description);\n               this.publication_date.setValue(\n          formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en')\n        );\n               let categoriesIds: string[] = [];\n        this.post.categories.forEach((cat: CategoryDTO) => {\n          categoriesIds.push(cat.categoryId);\n        });\n               this.categories.setValue(categoriesIds);\n               this.postForm = this.formBuilder.group({\n          title: this.title,\n          description: this.description,\n          publication_date: this.publication_date,\n          categories: this.categories,\n        });\n      } catch (error: any) {\n        errorResponse = error.error;\n        this.sharedService.errorLog(errorResponse);\n      } */\n\n      this.postService.getPostById(this.postId).subscribe(postResult => {\n        this.post = postResult;\n        this.title.setValue(this.post.title);\n        this.description.setValue(this.post.description);\n        this.publication_date.setValue(formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en'));\n        let categoriesIds = [];\n        this.post.categories.forEach(cat => {\n          categoriesIds.push(cat.categoryId);\n        });\n        this.categories.setValue(categoriesIds);\n        this.postForm = this.formBuilder.group({\n          title: this.title,\n          description: this.description,\n          publication_date: this.publication_date,\n          categories: this.categories\n        });\n      }, error => {\n        errorResponse = error.error;\n        this.sharedService.errorLog(errorResponse);\n      });\n    }\n  }\n\n  editPost() {\n    let errorResponse;\n    let responseOK = false;\n\n    if (this.postId) {\n      const userId = this.localStorageService.get('user_id');\n\n      if (userId) {\n        this.post.userId = userId;\n        /* try {\n          await this.postService.updatePost(this.postId, this.post);\n          responseOK = true;\n        } catch (error: any) {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        }\n                 await this.sharedService.managementToast(\n          'postFeedback',\n          responseOK,\n          errorResponse\n        );\n                 if (responseOK) {\n          // Reset the form\n          //this.registerForm.reset();\n          // After reset form we set birthDate to today again (is an example)\n          //this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n          this.router.navigateByUrl('posts');\n        } */\n\n        this.postService.updatePost(this.postId, this.post).subscribe(postResult => {\n          responseOK = true;\n        }, error => {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        }, () => {\n          this.sharedService.managementToast('postFeedback', responseOK, errorResponse);\n\n          if (responseOK) {\n            this.router.navigateByUrl('posts');\n          }\n        });\n      }\n    }\n\n    return responseOK;\n  }\n\n  createPost() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let errorResponse;\n      let responseOK = false;\n\n      const userId = _this.localStorageService.get('user_id');\n\n      if (userId) {\n        _this.post.userId = userId;\n        /* try {\n          await this.postService.createPost(this.post);\n          responseOK = true;\n        } catch (error: any) {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        }\n               await this.sharedService.managementToast(\n          'postFeedback',\n          responseOK,\n          errorResponse\n        );\n               if (responseOK) {\n          // Reset the form\n          //this.registerForm.reset();\n          // After reset form we set birthDate to today again (is an example)\n          //this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n          this.router.navigateByUrl('posts');\n        } */\n\n        _this.postService.createPost(_this.post).subscribe(postResult => {\n          responseOK = true;\n        }, error => {\n          errorResponse = error.error;\n\n          _this.sharedService.errorLog(errorResponse);\n        }, () => {\n          _this.sharedService.managementToast('postFeedback', responseOK, errorResponse);\n\n          if (responseOK) {\n            _this.router.navigateByUrl('posts');\n          }\n        });\n      }\n\n      return responseOK;\n    })();\n  }\n\n  savePost() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.isValidForm = false;\n\n      if (_this2.postForm.invalid) {\n        return;\n      }\n\n      _this2.isValidForm = true;\n      _this2.post = _this2.postForm.value;\n\n      if (_this2.isUpdateMode) {\n        _this2.validRequest = yield _this2.editPost();\n      } else {\n        _this2.validRequest = yield _this2.createPost();\n      }\n    })();\n  }\n\n}\n\nPostFormComponent.ɵfac = function PostFormComponent_Factory(t) {\n  return new (t || PostFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.SharedService), i0.ɵɵdirectiveInject(i5.LocalStorageService), i0.ɵɵdirectiveInject(i6.CategoryService));\n};\n\nPostFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostFormComponent,\n  selectors: [[\"app-post-form\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[2, \"margin-left\", \"auto\", \"margin-right\", \"auto\"], [\"id\", \"postFeedback\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", 3, \"formControl\"], [4, \"ngIf\"], [\"for\", \"description\"], [\"for\", \"publicationDate\"], [\"type\", \"date\", 3, \"formControl\"], [3, \"ngClass\", 4, \"ngIf\"], [\"for\", \"categories\"], [\"multiple\", \"\", 3, \"formControl\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"ngClass\"], [3, \"ngValue\"]],\n  template: function PostFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"p\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵelementStart(3, \"h1\");\n      i0.ɵɵtext(4, \"Post form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, PostFormComponent_form_5_Template, 23, 9, \"form\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.postForm);\n    }\n  },\n  styles: [\".error[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n#postFeedback[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n  min-width: 250px;\\n  color: #fff;\\n  text-align: center;\\n  border-radius: 10px;\\n  padding: 16px;\\n  z-index: 1;\\n  font-size: 14px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n#postFeedback.requestOk[_ngcontent-%COMP%] {\\n  background-color: green;\\n}\\n\\n#postFeedback.requestKo[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n#postFeedback.show[_ngcontent-%COMP%] {\\n  visibility: visible;\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s;\\n}\\n\\n@-webkit-keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0;\\n  }\\n  to {\\n    bottom: 30px;\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes fadein {\\n  from {\\n    bottom: 0;\\n    opacity: 0;\\n  }\\n  to {\\n    bottom: 30px;\\n    opacity: 1;\\n  }\\n}\\n\\n@-webkit-keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1;\\n  }\\n  to {\\n    bottom: 0;\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes fadeout {\\n  from {\\n    bottom: 30px;\\n    opacity: 1;\\n  }\\n  to {\\n    bottom: 0;\\n    opacity: 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLHVCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxxQkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7RUFDQSxpREFBQTtFQUNBLHlDQUFBO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFNBQUE7SUFDQSxVQUFBO0VBQ0Y7RUFDQTtJQUNFLFlBQUE7SUFDQSxVQUFBO0VBQ0Y7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsU0FBQTtJQUNBLFVBQUE7RUFBRjtFQUVBO0lBQ0UsWUFBQTtJQUNBLFVBQUE7RUFBRjtBQUNGOztBQUdBO0VBQ0U7SUFDRSxZQUFBO0lBQ0EsVUFBQTtFQURGO0VBR0E7SUFDRSxTQUFBO0lBQ0EsVUFBQTtFQURGO0FBQ0Y7O0FBSUE7RUFDRTtJQUNFLFlBQUE7SUFDQSxVQUFBO0VBRkY7RUFJQTtJQUNFLFNBQUE7SUFDQSxVQUFBO0VBRkY7QUFDRiIsImZpbGUiOiJwb3N0LWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbiNwb3N0RmVlZGJhY2sge1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICBtaW4td2lkdGg6IDI1MHB4O1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgei1pbmRleDogMTtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4jcG9zdEZlZWRiYWNrLnJlcXVlc3RPayB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbn1cclxuXHJcbiNwb3N0RmVlZGJhY2sucmVxdWVzdEtvIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbiNwb3N0RmVlZGJhY2suc2hvdyB7XHJcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAtd2Via2l0LWFuaW1hdGlvbjogZmFkZWluIDAuNXMsIGZhZGVvdXQgMC41cyAyLjVzO1xyXG4gIGFuaW1hdGlvbjogZmFkZWluIDAuNXMsIGZhZGVvdXQgMC41cyAyLjVzO1xyXG59XHJcblxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZWluIHtcclxuICBmcm9tIHtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIGJvdHRvbTogMzBweDtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVpbiB7XHJcbiAgZnJvbSB7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxuICB0byB7XHJcbiAgICBib3R0b206IDMwcHg7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxufVxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVvdXQge1xyXG4gIGZyb20ge1xyXG4gICAgYm90dG9tOiAzMHB4O1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgZmFkZW91dCB7XHJcbiAgZnJvbSB7XHJcbiAgICBib3R0b206IDMwcHg7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxuICB0byB7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/src/app/Components/posts/post-form/post-form.component.ts","/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/src/app/Components/posts/post-form/post-form.component.html"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,iBAA3B;AAEA,SAEE,WAFF,EAIE,UAJF,QAKO,gBALP;AASA,SAAS,OAAT,QAAwB,yBAAxB;;;;;;;;;;;ACIU,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AAAmC,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,mBAAA;AAAiB,IAAA,EAAA,CAAA,YAAA;;;;;;AAEpD,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,wCAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;;AARF,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AAIE,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,mDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAEA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,mDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAGF,IAAA,EAAA,CAAA,YAAA;;;;;AAPE,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,OAAA;AAEM,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,QAAA;AAEA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA;;;;;;AAPV,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AAUF,IAAA,EAAA,CAAA,YAAA;;;;;AATK,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,KAAA,CAAA,MAAA,IAAA,MAAA,CAAA,WAAA,IAAA,IAAA,IAAA,CAAA,MAAA,CAAA,WAAA;;;;;;AAqBD,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AAAyC,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,yBAAA;AAAuB,IAAA,EAAA,CAAA,YAAA;;;;;;AAEhE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,+CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;;AARF,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AAIE,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,oDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAEA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,oDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAGF,IAAA,EAAA,CAAA,YAAA;;;;;AAPE,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,OAAA;AAEM,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,CAAA,MAAA,CAAA,QAAA;AAEA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,CAAA,MAAA,CAAA,SAAA;;;;;;AAPV,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AAUF,IAAA,EAAA,CAAA,YAAA;;;;;AATK,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,CAAA,MAAA,IAAA,MAAA,CAAA,WAAA,IAAA,IAAA,IAAA,CAAA,MAAA,CAAA,WAAA;;;;;;AAmBH,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,gCAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;;AANF,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AAIE,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAGF,IAAA,EAAA,CAAA,YAAA;;;;;AALE,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,OAAA;AAEM,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,QAAA;;;;;;AASN,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,EAAA;AAIE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;AAHE,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,YAAA,CAAA,UAAA;AAEA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,YAAA,CAAA,KAAA,EAAA,GAAA;;;;;;;;AAzDR,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AAA8C,IAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,SAAA,0DAAA,GAAA;AAAA,MAAA,EAAA,CAAA,aAAA,CAAA,IAAA;AAAA,YAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA;AAAA,aAAA,OAAA,CAAA,QAAA,EAAA;AAAA,KAAA;AAC5C,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAAmB,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA;AAAM,IAAA,EAAA,CAAA,YAAA;AACzB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAEA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAYF,IAAA,EAAA,CAAA,YAAA;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAAyB,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,cAAA;AAAY,IAAA,EAAA,CAAA,YAAA;AACrC,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAEA,IAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAYF,IAAA,EAAA,CAAA,YAAA;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA;AAA6B,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,oBAAA;AAAkB,IAAA,EAAA,CAAA,YAAA;AAC/C,IAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AAQF,IAAA,EAAA,CAAA,YAAA;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AAAwB,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,oBAAA;AAAkB,IAAA,EAAA,CAAA,YAAA;AAC1C,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AACE,IAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,2CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA;AAMF,IAAA,EAAA,CAAA,YAAA;AACF,IAAA,EAAA,CAAA,YAAA;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAAsB,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,IAAA,EAAA,CAAA,YAAA;AAC5B,IAAA,EAAA,CAAA,YAAA;;;;;AA/DuB,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,QAAA;AAGA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,KAAA;AAEb,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AAgBa,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,WAAA;AAEb,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,CAAA,MAAA;AAgBa,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,gBAAA;AAEhB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,IAAA,MAAA,CAAA,WAAA,IAAA,IAAA,IAAA,CAAA,MAAA,CAAA,WAAA;AAWc,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,UAAA;AAEQ,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,cAAA;;;;ADrC/B,OAAM,MAAO,iBAAP,CAAwB;AAkB5B,EAAA,WAAA,CACU,cADV,EAEU,WAFV,EAGU,WAHV,EAIU,MAJV,EAKU,aALV,EAMU,mBANV,EAOU,eAPV,EAO0C;AANhC,SAAA,cAAA,GAAA,cAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,aAAA,GAAA,aAAA;AACA,SAAA,mBAAA,GAAA,mBAAA;AACA,SAAA,eAAA,GAAA,eAAA;AAER,SAAK,WAAL,GAAmB,IAAnB;AACA,SAAK,MAAL,GAAc,KAAK,cAAL,CAAoB,QAApB,CAA6B,QAA7B,CAAsC,GAAtC,CAA0C,IAA1C,CAAd;AACA,SAAK,IAAL,GAAY,IAAI,OAAJ,CAAY,EAAZ,EAAgB,EAAhB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,IAAI,IAAJ,EAA1B,CAAZ;AACA,SAAK,YAAL,GAAoB,KAApB;AACA,SAAK,YAAL,GAAoB,KAApB;AAEA,SAAK,KAAL,GAAa,IAAI,WAAJ,CAAgB,KAAK,IAAL,CAAU,KAA1B,EAAiC,CAC5C,UAAU,CAAC,QADiC,EAE5C,UAAU,CAAC,SAAX,CAAqB,EAArB,CAF4C,CAAjC,CAAb;AAKA,SAAK,WAAL,GAAmB,IAAI,WAAJ,CAAgB,KAAK,IAAL,CAAU,WAA1B,EAAuC,CACxD,UAAU,CAAC,QAD6C,EAExD,UAAU,CAAC,SAAX,CAAqB,GAArB,CAFwD,CAAvC,CAAnB;AAKA,SAAK,gBAAL,GAAwB,IAAI,WAAJ,CACtB,UAAU,CAAC,KAAK,IAAL,CAAU,gBAAX,EAA6B,YAA7B,EAA2C,IAA3C,CADY,EAEtB,CAAC,UAAU,CAAC,QAAZ,CAFsB,CAAxB;AAKA,SAAK,UAAL,GAAkB,IAAI,WAAJ,CAAgB,EAAhB,CAAlB,CAvBwC,CAyBxC;;AACA,SAAK,cAAL;AAEA,SAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACrC,MAAA,KAAK,EAAE,KAAK,KADyB;AAErC,MAAA,WAAW,EAAE,KAAK,WAFmB;AAGrC,MAAA,gBAAgB,EAAE,KAAK,gBAHc;AAIrC,MAAA,UAAU,EAAE,KAAK;AAJoB,KAAvB,CAAhB;AAMD;;AAEO,EAAA,cAAc,GAAA;AACpB,QAAI,aAAJ;AACA,UAAM,MAAM,GAAG,KAAK,mBAAL,CAAyB,GAAzB,CAA6B,SAA7B,CAAf;;AACA,QAAI,MAAJ,EAAY;AACV,UAAI;AACF;;AAEK;AACL,aAAK,eAAL,CACG,qBADH,CACyB,MADzB,EAEG,SAFH,CAEc,gBAAD,IAAqB;AAC9B,eAAK,cAAL,GAAsB,gBAAtB;AACD,SAJH;AAKD,OATD,CASE,OAAO,KAAP,EAAmB;AACnB,QAAA,aAAa,GAAG,KAAK,CAAC,KAAtB;AACA,aAAK,aAAL,CAAmB,QAAnB,CAA4B,aAA5B;AACD;AACF;AACF;;AAED,EAAA,QAAQ,GAAA;AACN,QAAI,aAAJ,CADM,CAEN;;AACA,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,YAAL,GAAoB,IAApB;AACA;;;;;;;;;;;;;;;;;;;;;;;AA4BA,WAAK,WAAL,CAAiB,WAAjB,CAA6B,KAAK,MAAlC,EAA0C,SAA1C,CACG,UAAD,IAAe;AACb,aAAK,IAAL,GAAY,UAAZ;AACA,aAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,IAAL,CAAU,KAA9B;AACA,aAAK,WAAL,CAAiB,QAAjB,CAA0B,KAAK,IAAL,CAAU,WAApC;AACA,aAAK,gBAAL,CAAsB,QAAtB,CACE,UAAU,CAAC,KAAK,IAAL,CAAU,gBAAX,EAA6B,YAA7B,EAA2C,IAA3C,CADZ;AAGA,YAAI,aAAa,GAAa,EAA9B;AACA,aAAK,IAAL,CAAU,UAAV,CAAqB,OAArB,CAA8B,GAAD,IAAqB;AAChD,UAAA,aAAa,CAAC,IAAd,CAAmB,GAAG,CAAC,UAAvB;AACD,SAFD;AAIA,aAAK,UAAL,CAAgB,QAAhB,CAAyB,aAAzB;AAEA,aAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACrC,UAAA,KAAK,EAAE,KAAK,KADyB;AAErC,UAAA,WAAW,EAAE,KAAK,WAFmB;AAGrC,UAAA,gBAAgB,EAAE,KAAK,gBAHc;AAIrC,UAAA,UAAU,EAAE,KAAK;AAJoB,SAAvB,CAAhB;AAMD,OArBH,EAsBG,KAAD,IAAe;AACb,QAAA,aAAa,GAAG,KAAK,CAAC,KAAtB;AACA,aAAK,aAAL,CAAmB,QAAnB,CAA4B,aAA5B;AACD,OAzBH;AA2BD;AACF;;AAEO,EAAA,QAAQ,GAAA;AACd,QAAI,aAAJ;AACA,QAAI,UAAU,GAAY,KAA1B;;AACA,QAAI,KAAK,MAAT,EAAiB;AACf,YAAM,MAAM,GAAG,KAAK,mBAAL,CAAyB,GAAzB,CAA6B,SAA7B,CAAf;;AACA,UAAI,MAAJ,EAAY;AACV,aAAK,IAAL,CAAU,MAAV,GAAmB,MAAnB;AACA;;;;;;;;;;;;;;;;;;;;AAqBA,aAAK,WAAL,CAAiB,UAAjB,CAA4B,KAAK,MAAjC,EAAyC,KAAK,IAA9C,EAAoD,SAApD,CACG,UAAD,IAAe;AACb,UAAA,UAAU,GAAG,IAAb;AACD,SAHH,EAIG,KAAD,IAAe;AACb,UAAA,aAAa,GAAG,KAAK,CAAC,KAAtB;AACA,eAAK,aAAL,CAAmB,QAAnB,CAA4B,aAA5B;AACD,SAPH,EAQE,MAAK;AACH,eAAK,aAAL,CAAmB,eAAnB,CACE,cADF,EAEE,UAFF,EAGE,aAHF;;AAKA,cAAI,UAAJ,EAAgB;AACd,iBAAK,MAAL,CAAY,aAAZ,CAA0B,OAA1B;AACD;AACF,SAjBH;AAmBD;AACF;;AACD,WAAO,UAAP;AACD;;AAEa,EAAA,UAAU,GAAA;AAAA;;AAAA;AACtB,UAAI,aAAJ;AACA,UAAI,UAAU,GAAY,KAA1B;;AACA,YAAM,MAAM,GAAG,KAAI,CAAC,mBAAL,CAAyB,GAAzB,CAA6B,SAA7B,CAAf;;AACA,UAAI,MAAJ,EAAY;AACV,QAAA,KAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,MAAnB;AACA;;;;;;;;;;;;;;;;;;;;AAqBA,QAAA,KAAI,CAAC,WAAL,CAAiB,UAAjB,CAA4B,KAAI,CAAC,IAAjC,EAAuC,SAAvC,CACG,UAAD,IAAe;AACb,UAAA,UAAU,GAAG,IAAb;AACD,SAHH,EAIG,KAAD,IAAe;AACb,UAAA,aAAa,GAAG,KAAK,CAAC,KAAtB;;AACA,UAAA,KAAI,CAAC,aAAL,CAAmB,QAAnB,CAA4B,aAA5B;AACD,SAPH,EAQE,MAAK;AACH,UAAA,KAAI,CAAC,aAAL,CAAmB,eAAnB,CACE,cADF,EAEE,UAFF,EAGE,aAHF;;AAKA,cAAI,UAAJ,EAAgB;AACd,YAAA,KAAI,CAAC,MAAL,CAAY,aAAZ,CAA0B,OAA1B;AACD;AACF,SAjBH;AAmBD;;AAED,aAAO,UAAP;AAhDsB;AAiDvB;;AAEK,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,MAAI,CAAC,WAAL,GAAmB,KAAnB;;AAEA,UAAI,MAAI,CAAC,QAAL,CAAc,OAAlB,EAA2B;AACzB;AACD;;AAED,MAAA,MAAI,CAAC,WAAL,GAAmB,IAAnB;AACA,MAAA,MAAI,CAAC,IAAL,GAAY,MAAI,CAAC,QAAL,CAAc,KAA1B;;AAEA,UAAI,MAAI,CAAC,YAAT,EAAuB;AACrB,QAAA,MAAI,CAAC,YAAL,SAA0B,MAAI,CAAC,QAAL,EAA1B;AACD,OAFD,MAEO;AACL,QAAA,MAAI,CAAC,YAAL,SAA0B,MAAI,CAAC,UAAL,EAA1B;AACD;AAdW;AAeb;;AAtQ2B;;;mBAAjB,iB,EAAiB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,mBAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,eAAA,C;AAAA,C;;;QAAjB,iB;AAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,aAAA,EAAA,MAAA,EAAA,cAAA,EAAA,MAAA,CAAA,EAAA,CAAA,IAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,UAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,aAAA,CAAA,EAAA,CAAA,KAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,YAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACtB9B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AAAI,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AACb,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AAgEF,MAAA,EAAA,CAAA,YAAA;;;;AAhES,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,QAAA","sourcesContent":["import { formatDate } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CategoryDTO } from 'src/app/Models/category.dto';\nimport { PostDTO } from 'src/app/Models/post.dto';\nimport { CategoryService } from 'src/app/Services/category.service';\nimport { LocalStorageService } from 'src/app/Services/local-storage.service';\nimport { PostService } from 'src/app/Services/post.service';\nimport { SharedService } from 'src/app/Services/shared.service';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.scss'],\n})\nexport class PostFormComponent implements OnInit {\n  post: PostDTO;\n  title: FormControl;\n  description: FormControl;\n  num_likes!: FormControl;\n  num_dislikes!: FormControl;\n  publication_date: FormControl;\n  categories!: FormControl;\n\n  postForm: FormGroup;\n  isValidForm: boolean | null;\n\n  private isUpdateMode: boolean;\n  private validRequest: boolean;\n  private postId: string | null;\n\n  categoriesList!: CategoryDTO[];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private postService: PostService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private sharedService: SharedService,\n    private localStorageService: LocalStorageService,\n    private categoryService: CategoryService\n  ) {\n    this.isValidForm = null;\n    this.postId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.post = new PostDTO('', '', 0, 0, new Date());\n    this.isUpdateMode = false;\n    this.validRequest = false;\n\n    this.title = new FormControl(this.post.title, [\n      Validators.required,\n      Validators.maxLength(55),\n    ]);\n\n    this.description = new FormControl(this.post.description, [\n      Validators.required,\n      Validators.maxLength(255),\n    ]);\n\n    this.publication_date = new FormControl(\n      formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en'),\n      [Validators.required]\n    );\n\n    this.categories = new FormControl([]);\n\n    // get categories by user and load multi select\n    this.loadCategories();\n\n    this.postForm = this.formBuilder.group({\n      title: this.title,\n      description: this.description,\n      publication_date: this.publication_date,\n      categories: this.categories,\n    });\n  }\n\n  private loadCategories() {\n    let errorResponse: any;\n    const userId = this.localStorageService.get('user_id');\n    if (userId) {\n      try {\n        /* this.categoriesList = await this.categoryService.getCategoriesByUserId(\n          userId\n        ); */\n        this.categoryService\n          .getCategoriesByUserId(userId)\n          .subscribe((categoriesResult) => {\n            this.categoriesList = categoriesResult;\n          });\n      } catch (error: any) {\n        errorResponse = error.error;\n        this.sharedService.errorLog(errorResponse);\n      }\n    }\n  }\n\n  ngOnInit() {\n    let errorResponse: any;\n    // update\n    if (this.postId) {\n      this.isUpdateMode = true;\n      /* try {\n        this.post = await this.postService.getPostById(this.postId);\n\n        this.title.setValue(this.post.title);\n\n        this.description.setValue(this.post.description);\n\n        this.publication_date.setValue(\n          formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en')\n        );\n\n        let categoriesIds: string[] = [];\n        this.post.categories.forEach((cat: CategoryDTO) => {\n          categoriesIds.push(cat.categoryId);\n        });\n\n        this.categories.setValue(categoriesIds);\n\n        this.postForm = this.formBuilder.group({\n          title: this.title,\n          description: this.description,\n          publication_date: this.publication_date,\n          categories: this.categories,\n        });\n      } catch (error: any) {\n        errorResponse = error.error;\n        this.sharedService.errorLog(errorResponse);\n      } */\n      this.postService.getPostById(this.postId).subscribe(\n        (postResult) => {\n          this.post = postResult;\n          this.title.setValue(this.post.title);\n          this.description.setValue(this.post.description);\n          this.publication_date.setValue(\n            formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en')\n          );\n          let categoriesIds: string[] = [];\n          this.post.categories.forEach((cat: CategoryDTO) => {\n            categoriesIds.push(cat.categoryId);\n          });\n\n          this.categories.setValue(categoriesIds);\n\n          this.postForm = this.formBuilder.group({\n            title: this.title,\n            description: this.description,\n            publication_date: this.publication_date,\n            categories: this.categories,\n          });\n        },\n        (error: any) => {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        }\n      );\n    }\n  }\n\n  private editPost() {\n    let errorResponse: any;\n    let responseOK: boolean = false;\n    if (this.postId) {\n      const userId = this.localStorageService.get('user_id');\n      if (userId) {\n        this.post.userId = userId;\n        /* try {\n          await this.postService.updatePost(this.postId, this.post);\n          responseOK = true;\n        } catch (error: any) {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        }\n\n        await this.sharedService.managementToast(\n          'postFeedback',\n          responseOK,\n          errorResponse\n        );\n\n        if (responseOK) {\n          // Reset the form\n          //this.registerForm.reset();\n          // After reset form we set birthDate to today again (is an example)\n          //this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n          this.router.navigateByUrl('posts');\n        } */\n        this.postService.updatePost(this.postId, this.post).subscribe(\n          (postResult) => {\n            responseOK = true;\n          },\n          (error: any) => {\n            errorResponse = error.error;\n            this.sharedService.errorLog(errorResponse);\n          },\n          () => {\n            this.sharedService.managementToast(\n              'postFeedback',\n              responseOK,\n              errorResponse\n            );\n            if (responseOK) {\n              this.router.navigateByUrl('posts');\n            }\n          }\n        );\n      }\n    }\n    return responseOK;\n  }\n\n  private async createPost(): Promise<boolean> {\n    let errorResponse: any;\n    let responseOK: boolean = false;\n    const userId = this.localStorageService.get('user_id');\n    if (userId) {\n      this.post.userId = userId;\n      /* try {\n        await this.postService.createPost(this.post);\n        responseOK = true;\n      } catch (error: any) {\n        errorResponse = error.error;\n        this.sharedService.errorLog(errorResponse);\n      }\n\n      await this.sharedService.managementToast(\n        'postFeedback',\n        responseOK,\n        errorResponse\n      );\n\n      if (responseOK) {\n        // Reset the form\n        //this.registerForm.reset();\n        // After reset form we set birthDate to today again (is an example)\n        //this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n        this.router.navigateByUrl('posts');\n      } */\n      this.postService.createPost(this.post).subscribe(\n        (postResult) => {\n          responseOK = true;\n        },\n        (error: any) => {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        },\n        () => {\n          this.sharedService.managementToast(\n            'postFeedback',\n            responseOK,\n            errorResponse\n          );\n          if (responseOK) {\n            this.router.navigateByUrl('posts');\n          }\n        }\n      );\n    }\n\n    return responseOK;\n  }\n\n  async savePost() {\n    this.isValidForm = false;\n\n    if (this.postForm.invalid) {\n      return;\n    }\n\n    this.isValidForm = true;\n    this.post = this.postForm.value;\n\n    if (this.isUpdateMode) {\n      this.validRequest = await this.editPost();\n    } else {\n      this.validRequest = await this.createPost();\n    }\n  }\n}\n","<div style=\"margin-left: auto; margin-right: auto\">\n  <p id=\"postFeedback\"></p>\n</div>\n<div>\n  <h1>Post form</h1>\n  <form *ngIf=\"postForm\" [formGroup]=\"postForm\" (ngSubmit)=\"savePost()\">\n    <div>\n      <label for=\"title\">Title:</label>\n      <input type=\"text\" [formControl]=\"title\" />\n\n      <div *ngIf=\"title.errors\">\n        <div\n          *ngIf=\"title.errors && isValidForm != null && !isValidForm\"\n          [ngClass]=\"'error'\"\n        >\n          <div *ngIf=\"title.errors.required\">Title is required</div>\n\n          <div *ngIf=\"title.errors.maxlength\">\n            Title can be max 55 characters long.\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div>\n      <label for=\"description\">Description:</label>\n      <input type=\"text\" [formControl]=\"description\" />\n\n      <div *ngIf=\"description.errors\">\n        <div\n          *ngIf=\"description.errors && isValidForm != null && !isValidForm\"\n          [ngClass]=\"'error'\"\n        >\n          <div *ngIf=\"description.errors.required\">Description is required</div>\n\n          <div *ngIf=\"description.errors.maxlength\">\n            Description can be max 255 characters long.\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div>\n      <label for=\"publicationDate\">Publication date: </label>\n      <input type=\"date\" [formControl]=\"publication_date\" />\n      <div\n        *ngIf=\"publication_date.errors && isValidForm != null && !isValidForm\"\n        [ngClass]=\"'error'\"\n      >\n        <div *ngIf=\"publication_date.errors.required\">\n          Publication date is required\n        </div>\n      </div>\n    </div>\n\n    <div>\n      <label for=\"categories\">Choose categories:</label>\n      <select multiple [formControl]=\"categories\">\n        <option\n          *ngFor=\"let category of categoriesList\"\n          [ngValue]=\"category.categoryId\"\n        >\n          {{ category.title }}\n        </option>\n      </select>\n    </div>\n\n    <button type=\"submit\">SAVE</button>\n  </form>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}