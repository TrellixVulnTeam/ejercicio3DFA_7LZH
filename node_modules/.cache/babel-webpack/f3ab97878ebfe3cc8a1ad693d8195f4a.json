{"ast":null,"code":"import _asyncToGenerator from \"/home/pascuord/Documentos/uoc/masterDesarrolloAplicacionesPaginasWeb/desarrolloFrontEndAvanzado/pec2/ejercicio3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { formatDate } from '@angular/common';\nimport { FormControl, Validators } from '@angular/forms';\nimport { PostDTO } from 'src/app/Models/post.dto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/post.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/Services/shared.service\";\nimport * as i5 from \"src/app/Services/local-storage.service\";\nimport * as i6 from \"src/app/Services/category.service\";\nimport * as i7 from \"@angular/common\";\n\nfunction PostFormComponent_form_5_div_5_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_5_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Title can be max 55 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_5_div_1_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtemplate(2, PostFormComponent_form_5_div_5_div_1_div_2_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.title.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.title.errors.maxlength);\n  }\n}\n\nfunction PostFormComponent_form_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_5_div_1_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.title.errors && ctx_r1.isValidForm != null && !ctx_r1.isValidForm);\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Description can be max 255 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_10_div_1_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtemplate(2, PostFormComponent_form_5_div_10_div_1_div_2_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.description.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.description.errors.maxlength);\n  }\n}\n\nfunction PostFormComponent_form_5_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_10_div_1_Template, 3, 3, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.description.errors && ctx_r2.isValidForm != null && !ctx_r2.isValidForm);\n  }\n}\n\nfunction PostFormComponent_form_5_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Publication date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PostFormComponent_form_5_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostFormComponent_form_5_div_15_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.publication_date.errors.required);\n  }\n}\n\nfunction PostFormComponent_form_5_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", category_r12.categoryId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r12.title, \" \");\n  }\n}\n\nfunction PostFormComponent_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function PostFormComponent_form_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.savePost();\n    });\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Title:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 5);\n    i0.ɵɵtemplate(5, PostFormComponent_form_5_div_5_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵelementStart(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 5);\n    i0.ɵɵtemplate(10, PostFormComponent_form_5_div_10_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵelementStart(12, \"label\", 8);\n    i0.ɵɵtext(13, \"Publication date: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 9);\n    i0.ɵɵtemplate(15, PostFormComponent_form_5_div_15_Template, 2, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\");\n    i0.ɵɵelementStart(17, \"label\", 11);\n    i0.ɵɵtext(18, \"Choose categories:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"select\", 12);\n    i0.ɵɵtemplate(20, PostFormComponent_form_5_option_20_Template, 2, 2, \"option\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 14);\n    i0.ɵɵtext(22, \"SAVE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.postForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.title.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.description.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.publication_date);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.publication_date.errors && ctx_r0.isValidForm != null && !ctx_r0.isValidForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.categories);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.categoriesList);\n  }\n}\n\nexport let PostFormComponent = /*#__PURE__*/(() => {\n  class PostFormComponent {\n    constructor(activatedRoute, postService, formBuilder, router, sharedService, localStorageService, categoryService) {\n      this.activatedRoute = activatedRoute;\n      this.postService = postService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.sharedService = sharedService;\n      this.localStorageService = localStorageService;\n      this.categoryService = categoryService;\n      this.isValidForm = null;\n      this.postId = this.activatedRoute.snapshot.paramMap.get('id');\n      this.post = new PostDTO('', '', 0, 0, new Date());\n      this.isUpdateMode = false;\n      this.validRequest = false;\n      this.title = new FormControl(this.post.title, [Validators.required, Validators.maxLength(55)]);\n      this.description = new FormControl(this.post.description, [Validators.required, Validators.maxLength(255)]);\n      this.publication_date = new FormControl(formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en'), [Validators.required]);\n      this.categories = new FormControl([]); // get categories by user and load multi select\n\n      this.loadCategories();\n      this.postForm = this.formBuilder.group({\n        title: this.title,\n        description: this.description,\n        publication_date: this.publication_date,\n        categories: this.categories\n      });\n    }\n\n    loadCategories() {\n      let errorResponse;\n      const userId = this.localStorageService.get('user_id');\n\n      if (userId) {\n        try {\n          /* this.categoriesList = await this.categoryService.getCategoriesByUserId(\n            userId\n          ); */\n          this.categoryService.getCategoriesByUserId(userId).subscribe(categoriesResult => {\n            this.categoriesList = categoriesResult;\n          });\n        } catch (error) {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        }\n      }\n    }\n\n    ngOnInit() {\n      let errorResponse; // update\n\n      if (this.postId) {\n        this.isUpdateMode = true;\n        /* try {\n          this.post = await this.postService.getPostById(this.postId);\n                 this.title.setValue(this.post.title);\n                 this.description.setValue(this.post.description);\n                 this.publication_date.setValue(\n            formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en')\n          );\n                 let categoriesIds: string[] = [];\n          this.post.categories.forEach((cat: CategoryDTO) => {\n            categoriesIds.push(cat.categoryId);\n          });\n                 this.categories.setValue(categoriesIds);\n                 this.postForm = this.formBuilder.group({\n            title: this.title,\n            description: this.description,\n            publication_date: this.publication_date,\n            categories: this.categories,\n          });\n        } catch (error: any) {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        } */\n\n        this.postService.getPostById(this.postId).subscribe(postResult => {\n          this.post = postResult;\n          this.title.setValue(this.post.title);\n          this.description.setValue(this.post.description);\n          this.publication_date.setValue(formatDate(this.post.publication_date, 'yyyy-MM-dd', 'en'));\n          let categoriesIds = [];\n          this.post.categories.forEach(cat => {\n            categoriesIds.push(cat.categoryId);\n          });\n          this.categories.setValue(categoriesIds);\n          this.postForm = this.formBuilder.group({\n            title: this.title,\n            description: this.description,\n            publication_date: this.publication_date,\n            categories: this.categories\n          });\n        }, error => {\n          errorResponse = error.error;\n          this.sharedService.errorLog(errorResponse);\n        });\n      }\n    }\n\n    editPost() {\n      let errorResponse;\n      let responseOK = false;\n\n      if (this.postId) {\n        const userId = this.localStorageService.get('user_id');\n\n        if (userId) {\n          this.post.userId = userId;\n          /* try {\n            await this.postService.updatePost(this.postId, this.post);\n            responseOK = true;\n          } catch (error: any) {\n            errorResponse = error.error;\n            this.sharedService.errorLog(errorResponse);\n          }\n                   await this.sharedService.managementToast(\n            'postFeedback',\n            responseOK,\n            errorResponse\n          );\n                   if (responseOK) {\n            // Reset the form\n            //this.registerForm.reset();\n            // After reset form we set birthDate to today again (is an example)\n            //this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n            this.router.navigateByUrl('posts');\n          } */\n\n          this.postService.updatePost(this.postId, this.post).subscribe(postResult => {\n            responseOK = true;\n          }, error => {\n            errorResponse = error.error;\n            this.sharedService.errorLog(errorResponse);\n          }, () => {\n            this.sharedService.managementToast('postFeedback', responseOK, errorResponse);\n\n            if (responseOK) {\n              this.router.navigateByUrl('posts');\n            }\n          });\n        }\n      }\n\n      return responseOK;\n    }\n\n    createPost() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        let errorResponse;\n        let responseOK = false;\n\n        const userId = _this.localStorageService.get('user_id');\n\n        if (userId) {\n          _this.post.userId = userId;\n          /* try {\n            await this.postService.createPost(this.post);\n            responseOK = true;\n          } catch (error: any) {\n            errorResponse = error.error;\n            this.sharedService.errorLog(errorResponse);\n          }\n                 await this.sharedService.managementToast(\n            'postFeedback',\n            responseOK,\n            errorResponse\n          );\n                 if (responseOK) {\n            // Reset the form\n            //this.registerForm.reset();\n            // After reset form we set birthDate to today again (is an example)\n            //this.birth_date.setValue(formatDate(new Date(), 'yyyy-MM-dd', 'en'));\n            this.router.navigateByUrl('posts');\n          } */\n\n          _this.postService.createPost(_this.post).subscribe(postResult => {\n            responseOK = true;\n          }, error => {\n            errorResponse = error.error;\n\n            _this.sharedService.errorLog(errorResponse);\n          }, () => {\n            _this.sharedService.managementToast('postFeedback', responseOK, errorResponse);\n\n            if (responseOK) {\n              _this.router.navigateByUrl('posts');\n            }\n          });\n        }\n\n        return responseOK;\n      })();\n    }\n\n    savePost() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.isValidForm = false;\n\n        if (_this2.postForm.invalid) {\n          return;\n        }\n\n        _this2.isValidForm = true;\n        _this2.post = _this2.postForm.value;\n\n        if (_this2.isUpdateMode) {\n          _this2.validRequest = yield _this2.editPost();\n        } else {\n          _this2.validRequest = yield _this2.createPost();\n        }\n      })();\n    }\n\n  }\n\n  PostFormComponent.ɵfac = function PostFormComponent_Factory(t) {\n    return new (t || PostFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.SharedService), i0.ɵɵdirectiveInject(i5.LocalStorageService), i0.ɵɵdirectiveInject(i6.CategoryService));\n  };\n\n  PostFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PostFormComponent,\n    selectors: [[\"app-post-form\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[2, \"margin-left\", \"auto\", \"margin-right\", \"auto\"], [\"id\", \"postFeedback\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", 3, \"formControl\"], [4, \"ngIf\"], [\"for\", \"description\"], [\"for\", \"publicationDate\"], [\"type\", \"date\", 3, \"formControl\"], [3, \"ngClass\", 4, \"ngIf\"], [\"for\", \"categories\"], [\"multiple\", \"\", 3, \"formControl\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"ngClass\"], [3, \"ngValue\"]],\n    template: function PostFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"p\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Post form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, PostFormComponent_form_5_Template, 23, 9, \"form\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.postForm);\n      }\n    },\n    directives: [i7.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective, i3.SelectMultipleControlValueAccessor, i7.NgForOf, i7.NgClass, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\".error[_ngcontent-%COMP%]{color:red}#postFeedback[_ngcontent-%COMP%]{visibility:hidden;min-width:250px;color:#fff;text-align:center;border-radius:10px;padding:16px;z-index:1;font-size:14px;margin-left:auto;margin-right:auto}#postFeedback.requestOk[_ngcontent-%COMP%]{background-color:green}#postFeedback.requestKo[_ngcontent-%COMP%]{background-color:red}#postFeedback.show[_ngcontent-%COMP%]{visibility:visible;-webkit-animation:fadein .5s,fadeout .5s 2.5s;animation:fadein .5s,fadeout .5s 2.5s}@-webkit-keyframes fadein{0%{bottom:0;opacity:0}to{bottom:30px;opacity:1}}@keyframes fadein{0%{bottom:0;opacity:0}to{bottom:30px;opacity:1}}@-webkit-keyframes fadeout{0%{bottom:30px;opacity:1}to{bottom:0;opacity:0}}@keyframes fadeout{0%{bottom:30px;opacity:1}to{bottom:0;opacity:0}}\"]\n  });\n  return PostFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}