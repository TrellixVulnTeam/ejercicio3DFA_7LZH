{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { AuthDTO } from \"src/app/Models/auth.dto\";\nimport { login, loginError, loginSuccess } from \"../actions\";\nexport const initialState = {\n  credentials: new AuthDTO(\"\", \"\", \"\", \"\"),\n  loading: false,\n  loaded: false,\n  error: null\n};\n\nconst _authReducer = createReducer(initialState, on(login, (state, action) => Object.assign(Object.assign({}, state), {\n  loading: true,\n  loaded: false,\n  credentials: action\n})), on(loginSuccess, (state, action) => Object.assign(Object.assign({}, state), {\n  loading: false,\n  loaded: true,\n  credentials: {\n    user_id: action.user_id,\n    access_token: action.access_token,\n    email: action.email,\n    password: action.password\n  }\n})), on(loginError, (state, {\n  payload\n}) => Object.assign(Object.assign({}, state), {\n  loading: false,\n  loaded: false,\n  error: payload\n})));\n\nexport function authReducer(state, action) {\n  return _authReducer(state, action);\n}","map":null,"metadata":{},"sourceType":"module"}